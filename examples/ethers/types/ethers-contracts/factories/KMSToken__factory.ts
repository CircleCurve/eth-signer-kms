/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { KMSToken, KMSTokenInterface } from "../KMSToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "faucet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c1238038062001c1283398181016040528101906200003791906200031b565b8181816003908051906020019062000051929190620001f9565b5080600490805190602001906200006a929190620001f9565b5050506200008733670de0b6b3a76400006200008f60201b60201c565b505062000645565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000102576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000f990620003c6565b60405180910390fd5b6200011660008383620001f460201b60201c565b80600260008282546200012a919062000475565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825462000181919062000475565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620001e89190620003e8565b60405180910390a35050565b505050565b828054620002079062000512565b90600052602060002090601f0160209004810192826200022b576000855562000277565b82601f106200024657805160ff191683800117855562000277565b8280016001018555821562000277579182015b828111156200027657825182559160200191906001019062000259565b5b5090506200028691906200028a565b5090565b5b80821115620002a55760008160009055506001016200028b565b5090565b6000620002c0620002ba846200042e565b62000405565b905082815260208101848484011115620002d957600080fd5b620002e6848285620004dc565b509392505050565b600082601f8301126200030057600080fd5b815162000312848260208601620002a9565b91505092915050565b600080604083850312156200032f57600080fd5b600083015167ffffffffffffffff8111156200034a57600080fd5b6200035885828601620002ee565b925050602083015167ffffffffffffffff8111156200037657600080fd5b6200038485828601620002ee565b9150509250929050565b60006200039d601f8362000464565b9150620003aa826200061c565b602082019050919050565b620003c081620004d2565b82525050565b60006020820190508181036000830152620003e1816200038e565b9050919050565b6000602082019050620003ff6000830184620003b5565b92915050565b60006200041162000424565b90506200041f828262000548565b919050565b6000604051905090565b600067ffffffffffffffff8211156200044c576200044b620005dc565b5b62000457826200060b565b9050602081019050919050565b600082825260208201905092915050565b60006200048282620004d2565b91506200048f83620004d2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620004c757620004c66200057e565b5b828201905092915050565b6000819050919050565b60005b83811015620004fc578082015181840152602081019050620004df565b838111156200050c576000848401525b50505050565b600060028204905060018216806200052b57607f821691505b60208210811415620005425762000541620005ad565b5b50919050565b62000553826200060b565b810181811067ffffffffffffffff82111715620005755762000574620005dc565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6115bd80620006556000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101a357806395d89b41146101d3578063a457c2d7146101f1578063a9059cbb14610221578063dd62ed3e14610251578063de5f72fd14610281576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161028b565b6040516100ce9190610fe0565b60405180910390f35b6100f160048036038101906100ec9190610e0b565b61031d565b6040516100fe9190610fc5565b60405180910390f35b61010f61033b565b60405161011c9190611102565b60405180910390f35b61013f600480360381019061013a9190610dbc565b610345565b60405161014c9190610fc5565b60405180910390f35b61015d610446565b60405161016a919061111d565b60405180910390f35b61018d60048036038101906101889190610e0b565b61044f565b60405161019a9190610fc5565b60405180910390f35b6101bd60048036038101906101b89190610d57565b6104fb565b6040516101ca9190611102565b60405180910390f35b6101db610543565b6040516101e89190610fe0565b60405180910390f35b61020b60048036038101906102069190610e0b565b6105d5565b6040516102189190610fc5565b60405180910390f35b61023b60048036038101906102369190610e0b565b6106c9565b6040516102489190610fc5565b60405180910390f35b61026b60048036038101906102669190610d80565b6106e7565b6040516102789190611102565b60405180910390f35b61028961076e565b005b60606003805461029a90611266565b80601f01602080910402602001604051908101604052809291908181526020018280546102c690611266565b80156103135780601f106102e857610100808354040283529160200191610313565b820191906000526020600020905b8154815290600101906020018083116102f657829003601f168201915b5050505050905090565b600061033161032a610782565b848461078a565b6001905092915050565b6000600254905090565b6000610352848484610955565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061039d610782565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561041d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041490611062565b60405180910390fd5b61043a85610429610782565b858461043591906111aa565b61078a565b60019150509392505050565b60006012905090565b60006104f161045c610782565b84846001600061046a610782565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ec9190611154565b61078a565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461055290611266565b80601f016020809104026020016040519081016040528092919081815260200182805461057e90611266565b80156105cb5780601f106105a0576101008083540402835291602001916105cb565b820191906000526020600020905b8154815290600101906020018083116105ae57829003601f168201915b5050505050905090565b600080600160006105e4610782565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156106a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610698906110c2565b60405180910390fd5b6106be6106ac610782565b8585846106b991906111aa565b61078a565b600191505092915050565b60006106dd6106d6610782565b8484610955565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61078033670de0b6b3a7640000610bd4565b565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f1906110a2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561086a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086190611022565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109489190611102565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bc90611082565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2c90611002565b60405180910390fd5b610a40838383610d28565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ac6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abd90611042565b60405180910390fd5b8181610ad291906111aa565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b629190611154565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bc69190611102565b60405180910390a350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3b906110e2565b60405180910390fd5b610c5060008383610d28565b8060026000828254610c629190611154565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cb79190611154565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d1c9190611102565b60405180910390a35050565b505050565b600081359050610d3c81611559565b92915050565b600081359050610d5181611570565b92915050565b600060208284031215610d6957600080fd5b6000610d7784828501610d2d565b91505092915050565b60008060408385031215610d9357600080fd5b6000610da185828601610d2d565b9250506020610db285828601610d2d565b9150509250929050565b600080600060608486031215610dd157600080fd5b6000610ddf86828701610d2d565b9350506020610df086828701610d2d565b9250506040610e0186828701610d42565b9150509250925092565b60008060408385031215610e1e57600080fd5b6000610e2c85828601610d2d565b9250506020610e3d85828601610d42565b9150509250929050565b610e50816111f0565b82525050565b6000610e6182611138565b610e6b8185611143565b9350610e7b818560208601611233565b610e84816112f6565b840191505092915050565b6000610e9c602383611143565b9150610ea782611307565b604082019050919050565b6000610ebf602283611143565b9150610eca82611356565b604082019050919050565b6000610ee2602683611143565b9150610eed826113a5565b604082019050919050565b6000610f05602883611143565b9150610f10826113f4565b604082019050919050565b6000610f28602583611143565b9150610f3382611443565b604082019050919050565b6000610f4b602483611143565b9150610f5682611492565b604082019050919050565b6000610f6e602583611143565b9150610f79826114e1565b604082019050919050565b6000610f91601f83611143565b9150610f9c82611530565b602082019050919050565b610fb08161121c565b82525050565b610fbf81611226565b82525050565b6000602082019050610fda6000830184610e47565b92915050565b60006020820190508181036000830152610ffa8184610e56565b905092915050565b6000602082019050818103600083015261101b81610e8f565b9050919050565b6000602082019050818103600083015261103b81610eb2565b9050919050565b6000602082019050818103600083015261105b81610ed5565b9050919050565b6000602082019050818103600083015261107b81610ef8565b9050919050565b6000602082019050818103600083015261109b81610f1b565b9050919050565b600060208201905081810360008301526110bb81610f3e565b9050919050565b600060208201905081810360008301526110db81610f61565b9050919050565b600060208201905081810360008301526110fb81610f84565b9050919050565b60006020820190506111176000830184610fa7565b92915050565b60006020820190506111326000830184610fb6565b92915050565b600081519050919050565b600082825260208201905092915050565b600061115f8261121c565b915061116a8361121c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561119f5761119e611298565b5b828201905092915050565b60006111b58261121c565b91506111c08361121c565b9250828210156111d3576111d2611298565b5b828203905092915050565b60006111e9826111fc565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611251578082015181840152602081019050611236565b83811115611260576000848401525b50505050565b6000600282049050600182168061127e57607f821691505b60208210811415611292576112916112c7565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b611562816111de565b811461156d57600080fd5b50565b6115798161121c565b811461158457600080fd5b5056fea264697066735822122043a70aad43151309bc645aa378165bf6abae01bb1de02f7c84dfbbcb0a07f2d464736f6c63430008030033";

export class KMSToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<KMSToken> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<KMSToken>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  attach(address: string): KMSToken {
    return super.attach(address) as KMSToken;
  }
  connect(signer: Signer): KMSToken__factory {
    return super.connect(signer) as KMSToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KMSTokenInterface {
    return new utils.Interface(_abi) as KMSTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KMSToken {
    return new Contract(address, _abi, signerOrProvider) as KMSToken;
  }
}
